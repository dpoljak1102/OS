/**
 * A basic math library.
 */
class Math {

    static Array twoToThe;

    /** Initializes the library. */
    function void init() {
        var int i, pow;
        let twoToThe = Array.new(16);
        
        let pow = 1;
        while (i < 16)
        {
            let twoToThe[i] = pow;
            let pow = pow + pow;
            let i = i + 1;
        } 
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x)
    {
        if (x < 0)
        {
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
        var int sum, shifted, i;
        let shifted = x;
        
        while (i < 16)
        {
            if (twoToThe[i] & y)
            {
                let sum = sum + shifted;
            }
            let shifted = shifted + shifted;
            let i = i + 1;
        }
        
        return sum;
    }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y) {
        var int neg_x, neg_y;
        var int q;
        var int result;
        
        let neg_x = x < 0;
        let neg_y = y < 0;
        let x = Math.abs(x);
        let y = Math.abs(y);

        if( y > x ) {
            return 0;
        }
        let q = Math.divide(x, y+y);
        if( x-(2*q*y) < y ) {
            let result = q+q;
        }
        else {
            let result = q+q+1;
        }
        
        if( neg_x = neg_y ) {
            return result;
        }
        else {
            return -result;
        }
    }

    function int mod(int x, int y) {
        return x - (Math.divide(x, y) * y);
    }

    /** Returns the integer part of log(x) . */
    function int log(int x){
        var int base;
        let base  = 2;

        if (x < 0) {
            do Sys.error(0);
            return 0;
        }

        if(x>1){
            let x = 1+ Math.log(Math.divide(x,base));
        }
        else{
            return 0;
        }
        return x;

    }

    function int power(int x, int y){
        var int result;
        let result = 1;

        if (y < 0) {
            do Sys.error(0);
            return 0;
        }


        while(y>0){
            if(Math.mod(y,2) = 0){
                let x = Math.multiply(x,x);
                let y = Math.divide(y,2);
            }
            else{
                let result = Math.multiply(result,x);
                let y = y-1;
            }
            
        }
        return result;

    }



    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int i, y, pow;
        
        if (x < 0)
        {
            return 0;
        }
        
        let i = 7;
        while (i > -1)
        {
            let pow = Math.multiply(y + twoToThe[i], y + twoToThe[i]);
            if (pow < x)
            {
                let y = y + twoToThe[i];
            }
            let i = i - 1;
        }
        
        return y;
    }

    /** Returns the greater number. */
    function int max(int x, int y)
    {
        if (x > y)
        {
            return x;
        }
        return y;
    }
    /** Returns the smaller number. */
    function int min(int x, int y)
    {
        if (x < y)
        {
            return x;
        }
        return y;
    }
}